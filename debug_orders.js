// Debug script to check orders sync status
// Open browser console and paste this code to run diagnostics

console.log('üîç Starting Orders Debug Session...');

// Function to check sync status
async function debugOrdersSync() {
  try {
    console.log('üìä Checking sync status...');
    await window.checkSyncStatus();
    
    console.log('üîç Inspecting failed orders...');
    const failedOrders = await window.inspectFailedOrders();
    
    console.log('üßπ Cleaning up orphaned order items...');
    await window.cleanupOrphanedOrderItems();
    
    console.log('üîß Fixing orders with missing required fields...');
    const fixedCount = await window.fixAllOrdersRequiredFields();
    
    console.log('üåê Testing Supabase connection...');
    await window.testSupabaseConnection();
    
    if (fixedCount > 0) {
      console.log('üöÄ Attempting manual sync after fixes...');
      await window.forceSyncWithSupabase();
    }
    
    console.log('‚úÖ Debug session complete!');
    
  } catch (error) {
    console.error('‚ùå Debug session failed:', error);
  }
}

// Function to inspect database structure
async function checkDatabaseStructure() {
  console.log('üóÑÔ∏è Checking IndexedDB structure...');
  await window.checkIndexedDBStructure();
}

// Function to recreate database if needed
async function recreateDatabase() {
  console.log('‚ö†Ô∏è Recreating IndexedDB database...');
  const success = await window.recreateIndexedDB();
  if (success) {
    console.log('‚úÖ Database recreated successfully. Please refresh the page.');
  } else {
    console.log('‚ùå Failed to recreate database.');
  }
}

// Run the debug functions
console.log('Available debug functions:');
console.log('- debugOrdersSync(): Run full diagnostic');
console.log('- checkDatabaseStructure(): Check IndexedDB structure');
console.log('- recreateDatabase(): Recreate IndexedDB (use with caution)');
console.log('');
console.log('Running full diagnostic now...');

debugOrdersSync();
